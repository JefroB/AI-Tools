name: Commit Message Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-commit-messages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check commit messages
        run: |
          # Get the commit range for this PR
          BASE_SHA=${{ github.event.pull_request.base.sha }}
          HEAD_SHA=${{ github.event.pull_request.head.sha }}
          
          echo "Checking commit messages between $BASE_SHA and $HEAD_SHA"
          
          # Define the pattern for valid commit messages
          PATTERN="^(feat|fix|refactor|docs|chore|test|style|perf|ci|build|revert)(\(.+\))?: .+"
          
          # Get all commits in this PR
          COMMITS=$(git log --format="%H" $BASE_SHA..$HEAD_SHA)
          
          INVALID_COMMITS=0
          
          for COMMIT in $COMMITS; do
            COMMIT_MSG=$(git log --format="%s" -n 1 $COMMIT)
            echo "Checking commit: $COMMIT_MSG"
            
            if [[ ! $COMMIT_MSG =~ $PATTERN ]]; then
              echo "::error::Commit message '$COMMIT_MSG' does not follow the required format."
              echo "::error::Commit messages must follow the format: <type>: <description>"
              echo "::error::Where <type> is one of: feat, fix, refactor, docs, chore, test, style, perf, ci, build, revert"
              echo "::error::Examples: feat: Add token counting functionality, fix: Fix cache invalidation issue"
              INVALID_COMMITS=$((INVALID_COMMITS+1))
            fi
          done
          
          if [ $INVALID_COMMITS -gt 0 ]; then
            echo "::error::Found $INVALID_COMMITS invalid commit messages. Please fix them and try again."
            exit 1
          fi
          
          echo "All commit messages are valid!"
